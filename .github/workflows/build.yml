name: Build Python

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: Python version

permissions:
  contents: write

jobs:
  build:
    name: Build Python (${{ github.event.inputs.version }})
    runs-on: ubuntu-latest
    container: debian:12-slim

    outputs:
      release: ${{ fromJSON(steps.upload.outputs.assets)[0].browser_download_url }}

    steps:
      - name: Install build dependencies
        run: |
          apt-get update -y
          apt-get install -y git sudo wget curl llvm xz-utils libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev libncursesw5-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev libmariadb-dev build-essential

      - name: Install pyenv
        run: |
          git clone --depth=1 https://github.com/pyenv/pyenv.git /opt/pyenv
          /opt/pyenv/src/configure
          echo "/opt/pyenv/plugins/python-build/bin" >> $GITHUB_PATH
          echo "/opt/pyenv/bin" >> $GITHUB_PATH
          echo "PYENV_ROOT=/opt/pyenv" >> $GITHUB_ENV

      - name: Build Python with python-build
        run: |
          python-build "${{ github.event.inputs.version }}" "/opt/pyenv/versions/${{ github.event.inputs.version }}-bin"
          tar -czf /tmp/python.tar.gz -C "/opt/pyenv/versions/${{ github.event.inputs.version }}-bin" .
        env:
          PYTHON_CONFIGURE_OPTS: --with-lto --with-computed-gotos --enable-optimizations --enable-shared

      - name: Upload built Python to release
        uses: softprops/action-gh-release@c9b46fe7aad9f02afd89b12450b780f52dacfb2d
        id: upload
        with:
          tag_name: ${{ github.event.inputs.version }}
          files: /tmp/python.tar.gz

  update:
    name: Update plugin (${{ github.event.inputs.version }})
    runs-on: ubuntu-latest

    needs:
      - build

    steps:
      - name: Configue Git details
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Checkout plugin repository
        uses: actions/checkout@v3
        with:
          ref: plugin
          fetch-depth: 0

      - name: Update plugin files
        run: |
          mkdir -p share/python-build/ || true
          printf "install_package \".\" \"${{ needs.build.outputs.release }}\" \"copy\"\n" > "share/python-build/${{ github.event.inputs.version }}-bin"
          git add "share/python-build/${{ github.event.inputs.version }}-bin"
          git commit -m "Build ${{ github.event.inputs.version }}"

      - name: Push plugin files
        uses: ad-m/github-push-action@9a2e3c14aaecf56d5816dc3a54514f82050820b2
        with:
          branch: plugin
